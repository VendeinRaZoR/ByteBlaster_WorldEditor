#include "VTGL_BasePrimitives.h"

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////Ray//////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

/*VTGL_Ray::VTGL_Ray(VTGL_Device * vtglDevice,VTVector3D vOrigin,VTVector3D vDirection)
{
	m_vOrigin = vOrigin;
	m_vDirection = vDirection;
	m_vDirection.Normalize();
	CreateVertexBuffer(2*sizeof(VertexXYZ),VertexXYZ::FVF,2);
	GetVertex((void**)&m_VXYZ);
	m_VXYZ[0] = VertexXYZ(Origin.x,Origin.y,Origin.z);
    m_VXYZ[1] = VertexXYZ(Origin.x + Direction.x,Origin.y + Direction.y,Origin.z + Direction.z);
	SetVertex();
}

D3DXVECTOR3 DXVTRay::GetOrigin()
{
	return m_Origin;
}
D3DXVECTOR3 DXVTRay::GetDirection()
{
	return m_Direction;
}

void DXVTRay::Transform(D3DXMATRIX* T)
{
     D3DXVec3TransformCoord(&m_Origin,&m_Origin,T);
     D3DXVec3TransformNormal(&m_Direction,&m_Direction,T);
     D3DXVec3Normalize(&m_Direction, &m_Direction);
}

float DXVTRay::GetLength()
{
	return (float)MAX_LEN;
}

DXVTRay::~DXVTRay()
{

}*/